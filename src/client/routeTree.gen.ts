/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as AuthCallbackImport } from './routes/auth/callback'
import { Route as AuthLayoutImport } from './routes/auth/_layout'
import { Route as AppLayoutImport } from './routes/app/_layout'
import { Route as AuthLayoutSignUpImport } from './routes/auth/_layout.sign-up'
import { Route as AuthLayoutSignInImport } from './routes/auth/_layout.sign-in'
import { Route as AppLayoutDashboardImport } from './routes/app/_layout.dashboard'
import { Route as AppLayoutDocumentDocIdImport } from './routes/app/_layout.document.$docId'
import { Route as ApiMcpAgentUserIdCallbackSessionIdImport } from './routes/api.mcp.agent.$userId.callback.$sessionId'

// Create Virtual Routes

const AuthImport = createFileRoute('/auth')()
const AppImport = createFileRoute('/app')()

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthCallbackRoute = AuthCallbackImport.update({
  id: '/callback',
  path: '/callback',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLayoutRoute = AuthLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AuthRoute,
} as any)

const AppLayoutRoute = AppLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AppRoute,
} as any)

const AuthLayoutSignUpRoute = AuthLayoutSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AuthLayoutSignInRoute = AuthLayoutSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthLayoutRoute,
} as any)

const AppLayoutDashboardRoute = AppLayoutDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppLayoutRoute,
} as any)

const AppLayoutDocumentDocIdRoute = AppLayoutDocumentDocIdImport.update({
  id: '/document/$docId',
  path: '/document/$docId',
  getParentRoute: () => AppLayoutRoute,
} as any)

const ApiMcpAgentUserIdCallbackSessionIdRoute =
  ApiMcpAgentUserIdCallbackSessionIdImport.update({
    id: '/api/mcp/agent/$userId/callback/$sessionId',
    path: '/api/mcp/agent/$userId/callback/$sessionId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/app/_layout': {
      id: '/app/_layout'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppLayoutImport
      parentRoute: typeof AppRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/auth/_layout': {
      id: '/auth/_layout'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLayoutImport
      parentRoute: typeof AuthRoute
    }
    '/auth/callback': {
      id: '/auth/callback'
      path: '/callback'
      fullPath: '/auth/callback'
      preLoaderRoute: typeof AuthCallbackImport
      parentRoute: typeof AuthImport
    }
    '/app/_layout/dashboard': {
      id: '/app/_layout/dashboard'
      path: '/dashboard'
      fullPath: '/app/dashboard'
      preLoaderRoute: typeof AppLayoutDashboardImport
      parentRoute: typeof AppLayoutImport
    }
    '/auth/_layout/sign-in': {
      id: '/auth/_layout/sign-in'
      path: '/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthLayoutSignInImport
      parentRoute: typeof AuthLayoutImport
    }
    '/auth/_layout/sign-up': {
      id: '/auth/_layout/sign-up'
      path: '/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthLayoutSignUpImport
      parentRoute: typeof AuthLayoutImport
    }
    '/app/_layout/document/$docId': {
      id: '/app/_layout/document/$docId'
      path: '/document/$docId'
      fullPath: '/app/document/$docId'
      preLoaderRoute: typeof AppLayoutDocumentDocIdImport
      parentRoute: typeof AppLayoutImport
    }
    '/api/mcp/agent/$userId/callback/$sessionId': {
      id: '/api/mcp/agent/$userId/callback/$sessionId'
      path: '/api/mcp/agent/$userId/callback/$sessionId'
      fullPath: '/api/mcp/agent/$userId/callback/$sessionId'
      preLoaderRoute: typeof ApiMcpAgentUserIdCallbackSessionIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface AppLayoutRouteChildren {
  AppLayoutDashboardRoute: typeof AppLayoutDashboardRoute
  AppLayoutDocumentDocIdRoute: typeof AppLayoutDocumentDocIdRoute
}

const AppLayoutRouteChildren: AppLayoutRouteChildren = {
  AppLayoutDashboardRoute: AppLayoutDashboardRoute,
  AppLayoutDocumentDocIdRoute: AppLayoutDocumentDocIdRoute,
}

const AppLayoutRouteWithChildren = AppLayoutRoute._addFileChildren(
  AppLayoutRouteChildren,
)

interface AppRouteChildren {
  AppLayoutRoute: typeof AppLayoutRouteWithChildren
}

const AppRouteChildren: AppRouteChildren = {
  AppLayoutRoute: AppLayoutRouteWithChildren,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

interface AuthLayoutRouteChildren {
  AuthLayoutSignInRoute: typeof AuthLayoutSignInRoute
  AuthLayoutSignUpRoute: typeof AuthLayoutSignUpRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthLayoutSignInRoute: AuthLayoutSignInRoute,
  AuthLayoutSignUpRoute: AuthLayoutSignUpRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface AuthRouteChildren {
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  AuthCallbackRoute: typeof AuthCallbackRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  AuthCallbackRoute: AuthCallbackRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppLayoutRouteWithChildren
  '/auth': typeof AuthLayoutRouteWithChildren
  '/auth/callback': typeof AuthCallbackRoute
  '/app/dashboard': typeof AppLayoutDashboardRoute
  '/auth/sign-in': typeof AuthLayoutSignInRoute
  '/auth/sign-up': typeof AuthLayoutSignUpRoute
  '/app/document/$docId': typeof AppLayoutDocumentDocIdRoute
  '/api/mcp/agent/$userId/callback/$sessionId': typeof ApiMcpAgentUserIdCallbackSessionIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppLayoutRouteWithChildren
  '/auth': typeof AuthLayoutRouteWithChildren
  '/auth/callback': typeof AuthCallbackRoute
  '/app/dashboard': typeof AppLayoutDashboardRoute
  '/auth/sign-in': typeof AuthLayoutSignInRoute
  '/auth/sign-up': typeof AuthLayoutSignUpRoute
  '/app/document/$docId': typeof AppLayoutDocumentDocIdRoute
  '/api/mcp/agent/$userId/callback/$sessionId': typeof ApiMcpAgentUserIdCallbackSessionIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/app/_layout': typeof AppLayoutRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/auth/_layout': typeof AuthLayoutRouteWithChildren
  '/auth/callback': typeof AuthCallbackRoute
  '/app/_layout/dashboard': typeof AppLayoutDashboardRoute
  '/auth/_layout/sign-in': typeof AuthLayoutSignInRoute
  '/auth/_layout/sign-up': typeof AuthLayoutSignUpRoute
  '/app/_layout/document/$docId': typeof AppLayoutDocumentDocIdRoute
  '/api/mcp/agent/$userId/callback/$sessionId': typeof ApiMcpAgentUserIdCallbackSessionIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/auth'
    | '/auth/callback'
    | '/app/dashboard'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/app/document/$docId'
    | '/api/mcp/agent/$userId/callback/$sessionId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/auth'
    | '/auth/callback'
    | '/app/dashboard'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/app/document/$docId'
    | '/api/mcp/agent/$userId/callback/$sessionId'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/app/_layout'
    | '/auth'
    | '/auth/_layout'
    | '/auth/callback'
    | '/app/_layout/dashboard'
    | '/auth/_layout/sign-in'
    | '/auth/_layout/sign-up'
    | '/app/_layout/document/$docId'
    | '/api/mcp/agent/$userId/callback/$sessionId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  ApiMcpAgentUserIdCallbackSessionIdRoute: typeof ApiMcpAgentUserIdCallbackSessionIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  ApiMcpAgentUserIdCallbackSessionIdRoute:
    ApiMcpAgentUserIdCallbackSessionIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/app",
        "/auth",
        "/api/mcp/agent/$userId/callback/$sessionId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/app": {
      "filePath": "app",
      "children": [
        "/app/_layout"
      ]
    },
    "/app/_layout": {
      "filePath": "app/_layout.tsx",
      "parent": "/app",
      "children": [
        "/app/_layout/dashboard",
        "/app/_layout/document/$docId"
      ]
    },
    "/auth": {
      "filePath": "auth",
      "children": [
        "/auth/_layout",
        "/auth/callback"
      ]
    },
    "/auth/_layout": {
      "filePath": "auth/_layout.tsx",
      "parent": "/auth",
      "children": [
        "/auth/_layout/sign-in",
        "/auth/_layout/sign-up"
      ]
    },
    "/auth/callback": {
      "filePath": "auth/callback.tsx",
      "parent": "/auth"
    },
    "/app/_layout/dashboard": {
      "filePath": "app/_layout.dashboard.tsx",
      "parent": "/app/_layout"
    },
    "/auth/_layout/sign-in": {
      "filePath": "auth/_layout.sign-in.tsx",
      "parent": "/auth/_layout"
    },
    "/auth/_layout/sign-up": {
      "filePath": "auth/_layout.sign-up.tsx",
      "parent": "/auth/_layout"
    },
    "/app/_layout/document/$docId": {
      "filePath": "app/_layout.document.$docId.tsx",
      "parent": "/app/_layout"
    },
    "/api/mcp/agent/$userId/callback/$sessionId": {
      "filePath": "api.mcp.agent.$userId.callback.$sessionId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
